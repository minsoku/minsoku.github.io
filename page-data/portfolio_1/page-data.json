{"componentChunkName":"component---src-templates-blog-template-js","path":"/portfolio_1/","result":{"data":{"cur":{"id":"d41a20ee-6735-5e45-8daf-fe8ff616ae5b","html":"<h1 id=\"개요\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EC%9A%94\" aria-label=\"개요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개요</h1>\n<h3 id=\"제가-직접-기획-디자인-프론트엔드-백엔드-인프라를-직접-구성하여-진행한-프로젝트입니다\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%EA%B0%80-%EC%A7%81%EC%A0%91-%EA%B8%B0%ED%9A%8D-%EB%94%94%EC%9E%90%EC%9D%B8-%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C-%EB%B0%B1%EC%97%94%EB%93%9C-%EC%9D%B8%ED%94%84%EB%9D%BC%EB%A5%BC-%EC%A7%81%EC%A0%91-%EA%B5%AC%EC%84%B1%ED%95%98%EC%97%AC-%EC%A7%84%ED%96%89%ED%95%9C-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%9E%85%EB%8B%88%EB%8B%A4\" aria-label=\"제가 직접 기획 디자인 프론트엔드 백엔드 인프라를 직접 구성하여 진행한 프로젝트입니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제가 직접 기획, 디자인, 프론트엔드, 백엔드, 인프라를 직접 구성하여 진행한 프로젝트입니다.</h3>\n<h1 id=\"기획서-스토리보드\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%ED%9A%8D%EC%84%9C-%EC%8A%A4%ED%86%A0%EB%A6%AC%EB%B3%B4%EB%93%9C\" aria-label=\"기획서 스토리보드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기획서, 스토리보드</h1>\n<h3 id=\"기획서--a-hrefhttpsgymzzakmanns3ap-northeast-2amazonawscomothere1848ce185b5e186b7e1848de185a1e186a8e18486e185a2e186abe18480e185b5e18492e185ace186a8e18489e185a5pdf-target_blank새탭열기a\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%ED%9A%8D%EC%84%9C--a-hrefhttpsgymzzakmanns3ap-northeast-2amazonawscomothere1848ce185b5e186b7e1848de185a1e186a8e18486e185a2e186abe18480e185b5e18492e185ace186a8e18489e185a5pdf-target_blank%EC%83%88%ED%83%AD%EC%97%B4%EA%B8%B0a\" aria-label=\"기획서  a hrefhttpsgymzzakmanns3ap northeast 2amazonawscomothere1848ce185b5e186b7e1848de185a1e186a8e18486e185a2e186abe18480e185b5e18492e185ace186a8e18489e185a5pdf target_blank새탭열기a permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기획서 : <a href=\"https://gymzzakmann.s3.ap-northeast-2.amazonaws.com/other/%E1%84%8C%E1%85%B5%E1%86%B7%E1%84%8D%E1%85%A1%E1%86%A8%E1%84%86%E1%85%A2%E1%86%AB+%E1%84%80%E1%85%B5%E1%84%92%E1%85%AC%E1%86%A8%E1%84%89%E1%85%A5.pdf\" target=\"_blank\">새탭열기</a></h3>\n<h3 id=\"스토리보드--a-hrefhttpsgymzzakmanns3ap-northeast-2amazonawscomothere18489e185b3e18490e185a9e18485e185b5e18487e185a9e18483e185b3pdf-target_blank새탭열기a\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%86%A0%EB%A6%AC%EB%B3%B4%EB%93%9C--a-hrefhttpsgymzzakmanns3ap-northeast-2amazonawscomothere18489e185b3e18490e185a9e18485e185b5e18487e185a9e18483e185b3pdf-target_blank%EC%83%88%ED%83%AD%EC%97%B4%EA%B8%B0a\" aria-label=\"스토리보드  a hrefhttpsgymzzakmanns3ap northeast 2amazonawscomothere18489e185b3e18490e185a9e18485e185b5e18487e185a9e18483e185b3pdf target_blank새탭열기a permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스토리보드 : <a href=\"https://gymzzakmann.s3.ap-northeast-2.amazonaws.com/other/%E1%84%89%E1%85%B3%E1%84%90%E1%85%A9%E1%84%85%E1%85%B5%E1%84%87%E1%85%A9%E1%84%83%E1%85%B3.pdf\" target=\"_blank\">새탭열기</a></h3>\n<h1 id=\"깃허브-주소\" style=\"position:relative;\"><a href=\"#%EA%B9%83%ED%97%88%EB%B8%8C-%EC%A3%BC%EC%86%8C\" aria-label=\"깃허브 주소 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>깃허브 주소</h1>\n<h3 id=\"프론트엔드--a-hrefhttpsgithubcomminsokugymzzakman_client-target_blank새탭열기a\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C--a-hrefhttpsgithubcomminsokugymzzakman_client-target_blank%EC%83%88%ED%83%AD%EC%97%B4%EA%B8%B0a\" aria-label=\"프론트엔드  a hrefhttpsgithubcomminsokugymzzakman_client target_blank새탭열기a permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프론트엔드 : <a href=\"https://github.com/minsoku/gymzzakman_client\" target=\"_blank\">새탭열기</a></h3>\n<h3 id=\"서버typeorm-버전--a-hrefhttpsgithubcomminsokugymzzakman_server-target_blank새탭열기a\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EB%B2%84typeorm-%EB%B2%84%EC%A0%84--a-hrefhttpsgithubcomminsokugymzzakman_server-target_blank%EC%83%88%ED%83%AD%EC%97%B4%EA%B8%B0a\" aria-label=\"서버typeorm 버전  a hrefhttpsgithubcomminsokugymzzakman_server target_blank새탭열기a permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서버(typeorm 버전) : <a href=\"https://github.com/minsoku/gymzzakman_server\" target=\"_blank\">새탭열기</a></h3>\n<h3 id=\"서버mysql-버전--a-hrefhttpsgithubcomminsokugymzzakman_service_api-target_blank새탭열기a\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EB%B2%84mysql-%EB%B2%84%EC%A0%84--a-hrefhttpsgithubcomminsokugymzzakman_service_api-target_blank%EC%83%88%ED%83%AD%EC%97%B4%EA%B8%B0a\" aria-label=\"서버mysql 버전  a hrefhttpsgithubcomminsokugymzzakman_service_api target_blank새탭열기a permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서버(mysql 버전) : <a href=\"https://github.com/minsoku/gymzzakman_service_api\" target=\"_blank\">새탭열기</a></h3>\n<h3 id=\"db서버mysql-버전--a-hrefhttpsgithubcomminsokugymzzakman_db_api-target_blank새탭열기a\" style=\"position:relative;\"><a href=\"#db%EC%84%9C%EB%B2%84mysql-%EB%B2%84%EC%A0%84--a-hrefhttpsgithubcomminsokugymzzakman_db_api-target_blank%EC%83%88%ED%83%AD%EC%97%B4%EA%B8%B0a\" aria-label=\"db서버mysql 버전  a hrefhttpsgithubcomminsokugymzzakman_db_api target_blank새탭열기a permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DB서버(mysql 버전) : <a href=\"https://github.com/minsoku/gymzzakman_db_api\" target=\"_blank\">새탭열기</a></h3>\n<h1 id=\"db-설계\" style=\"position:relative;\"><a href=\"#db-%EC%84%A4%EA%B3%84\" aria-label=\"db 설계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DB 설계</h1>\n<p><img src=\"https://velog.velcdn.com/images/minsoku031/post/c3f147d9-b8bf-4367-b3ed-9c394b6ee088/image.png\" alt=\"DB\"></p>\n<h3 id=\"쿼리나-entity는-github에-있습니다\" style=\"position:relative;\"><a href=\"#%EC%BF%BC%EB%A6%AC%EB%82%98-entity%EB%8A%94-github%EC%97%90-%EC%9E%88%EC%8A%B5%EB%8B%88%EB%8B%A4\" aria-label=\"쿼리나 entity는 github에 있습니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>쿼리나 entity는 github에 있습니다.</h3>\n<h1 id=\"디자인\" style=\"position:relative;\"><a href=\"#%EB%94%94%EC%9E%90%EC%9D%B8\" aria-label=\"디자인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>디자인</h1>\n<p><img src=\"https://velog.velcdn.com/images/minsoku031/post/9ec05a7d-b56d-4421-99c3-44399de1d035/image.png\" alt=\"메인\"></p>\n<h3 id=\"메인화면\" style=\"position:relative;\"><a href=\"#%EB%A9%94%EC%9D%B8%ED%99%94%EB%A9%B4\" aria-label=\"메인화면 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>메인화면</h3>\n<p><img src=\"https://velog.velcdn.com/images/minsoku031/post/afc583a5-a222-4a6f-9634-c707dbdc2c55/image.png\" alt=\"회원가입\"></p>\n<h3 id=\"회원가입\" style=\"position:relative;\"><a href=\"#%ED%9A%8C%EC%9B%90%EA%B0%80%EC%9E%85\" aria-label=\"회원가입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>회원가입</h3>\n<p><img src=\"https://velog.velcdn.com/images/minsoku031/post/d06bdae9-0a12-400a-86a0-b0c7b65ad994/image.png\" alt=\"로그인\"></p>\n<h3 id=\"로그인\" style=\"position:relative;\"><a href=\"#%EB%A1%9C%EA%B7%B8%EC%9D%B8\" aria-label=\"로그인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>로그인</h3>\n<p><img src=\"https://velog.velcdn.com/images/minsoku031/post/49b27c7a-f91e-46ce-8570-24779dccab6f/image.png\" alt=\"검색1\"></p>\n<h3 id=\"최저가-검색\" style=\"position:relative;\"><a href=\"#%EC%B5%9C%EC%A0%80%EA%B0%80-%EA%B2%80%EC%83%89\" aria-label=\"최저가 검색 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>최저가 검색</h3>\n<p><img src=\"https://velog.velcdn.com/images/minsoku031/post/7feaca9b-dd71-4715-aa60-0aae9ebbff75/image.png\" alt=\"검색2\"></p>\n<h3 id=\"최저가-검색-1\" style=\"position:relative;\"><a href=\"#%EC%B5%9C%EC%A0%80%EA%B0%80-%EA%B2%80%EC%83%89-1\" aria-label=\"최저가 검색 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>최저가 검색</h3>\n<p><img src=\"https://velog.velcdn.com/images/minsoku031/post/e2da24e1-b334-494a-a235-3e3a9a241db6/image.png\" alt=\"검색결과\"></p>\n<h3 id=\"최저가-검색결과\" style=\"position:relative;\"><a href=\"#%EC%B5%9C%EC%A0%80%EA%B0%80-%EA%B2%80%EC%83%89%EA%B2%B0%EA%B3%BC\" aria-label=\"최저가 검색결과 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>최저가 검색결과</h3>\n<p><img src=\"https://velog.velcdn.com/images/minsoku031/post/a6ccb3c3-a1c7-4882-9bc0-0c6b22ed2ca6/image.png\" alt=\"검색결과 문의\"></p>\n<h3 id=\"최저가-검색결과-문의하기-버튼-클릭-시\" style=\"position:relative;\"><a href=\"#%EC%B5%9C%EC%A0%80%EA%B0%80-%EA%B2%80%EC%83%89%EA%B2%B0%EA%B3%BC-%EB%AC%B8%EC%9D%98%ED%95%98%EA%B8%B0-%EB%B2%84%ED%8A%BC-%ED%81%B4%EB%A6%AD-%EC%8B%9C\" aria-label=\"최저가 검색결과 문의하기 버튼 클릭 시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>최저가 검색결과 문의하기 버튼 클릭 시</h3>\n<p><img src=\"https://velog.velcdn.com/images/minsoku031/post/c300bfc8-f075-4873-b372-0487e3c925d6/image.png\" alt=\"커뮤니티\"></p>\n<h3 id=\"커뮤니티\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EB%AE%A4%EB%8B%88%ED%8B%B0\" aria-label=\"커뮤니티 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커뮤니티</h3>\n<p><img src=\"https://velog.velcdn.com/images/minsoku031/post/b0da8b7c-9143-4f96-ad6d-e0bccdd5f70e/image.png\" alt=\"운동종목찾기\"></p>\n<h3 id=\"운동종목찾기\" style=\"position:relative;\"><a href=\"#%EC%9A%B4%EB%8F%99%EC%A2%85%EB%AA%A9%EC%B0%BE%EA%B8%B0\" aria-label=\"운동종목찾기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>운동종목찾기</h3>\n<p><img src=\"https://velog.velcdn.com/images/minsoku031/post/359c3ee5-4323-4166-bcf8-30f189fc3d8b/image.png\" alt=\"추천1\"></p>\n<h3 id=\"운동종목-추천1\" style=\"position:relative;\"><a href=\"#%EC%9A%B4%EB%8F%99%EC%A2%85%EB%AA%A9-%EC%B6%94%EC%B2%9C1\" aria-label=\"운동종목 추천1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>운동종목 추천1</h3>\n<p><img src=\"https://velog.velcdn.com/images/minsoku031/post/38d5a911-0326-4b62-8804-bd17a672949a/image.png\" alt=\"추천2\"></p>\n<h3 id=\"운동종목-추천2\" style=\"position:relative;\"><a href=\"#%EC%9A%B4%EB%8F%99%EC%A2%85%EB%AA%A9-%EC%B6%94%EC%B2%9C2\" aria-label=\"운동종목 추천2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>운동종목 추천2</h3>\n<p><img src=\"https://velog.velcdn.com/images/minsoku031/post/3ae37d63-65e7-4f56-abe7-db4c2db5335e/image.png\" alt=\"추천3\"></p>\n<h3 id=\"운동종목-추천3\" style=\"position:relative;\"><a href=\"#%EC%9A%B4%EB%8F%99%EC%A2%85%EB%AA%A9-%EC%B6%94%EC%B2%9C3\" aria-label=\"운동종목 추천3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>운동종목 추천3</h3>\n<p><img src=\"https://velog.velcdn.com/images/minsoku031/post/db6eaf71-a15c-443e-899e-8c702214a94b/image.png\" alt=\"추천4\"></p>\n<h3 id=\"운동종목-추천4\" style=\"position:relative;\"><a href=\"#%EC%9A%B4%EB%8F%99%EC%A2%85%EB%AA%A9-%EC%B6%94%EC%B2%9C4\" aria-label=\"운동종목 추천4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>운동종목 추천4</h3>","excerpt":"개요 제가 직접 기획, 디자인, 프론트엔드, 백엔드, 인프라를 직접 구성하여 진행한 프로젝트입니다. 기획서, 스토리보드 기획서 : 새탭열기 스토리보드 : 새탭열기 깃허브 주소 프론트엔드 : 새탭열기 서버(typeorm 버전) : 새탭열기 서버(mysql 버전) : 새탭열기 DB서버(mysql 버전) : 새탭열기 DB 설계 DB 쿼리나 entity는 github에 있습니다. 디자인 메인 메인화면 회원가입 회원가입 로그인 로그인 검색1 최저가 검색 검색2 최저가 검색 검색결과 최저가 검색결과 검색결과 문의 최저가 검색결과 문의하기 버튼 클릭 시 커뮤니티 커뮤니티 운동종목찾기 운동종목찾기 추천1 운동종목 추천1 추천2 운동종목 추천2 추천3 운동종목 추천3 추천4 운동종목 추천4","frontmatter":{"date":"April 23, 2021","title":"짐짝맨","categories":"포트폴리오","author":"minsoku","emoji":"🐶"},"fields":{"slug":"/portfolio_1/"}},"next":{"id":"96e7f105-0f88-58e2-ad61-b6d371cceb99","html":"<ul>\n<li><a href=\"https://nestjs.com/\">Nestjs</a>는 효율적이고 스케일링이 쉬운 nodejs 서버를 만드는데 사용하는 프레임워크이다.</li>\n<li>차세대 Javascript를 사용하며 Typescript로 만들어졌으며 Typescript를 완전히 지원한다.</li>\n<li>Nestjs는 Express 같은 견고한 HTTP 서버 프레임워크를 사용하고 있으며 원한다면 Fastify를 대신 사용할 수 있다.</li>\n<li>상당히 많은 Nodejs 라이브러리, 헬퍼, 툴들이 있음에도 불구하고 아키텍처 설계에 대한 문제를 해결해주는 해결책은 존재하지 않는다.</li>\n<li>Nestjs는 자체적으로 서버 아키텍쳐를 제공해준다. 그래서 테스트하기 쉽고, 디커플링이 잘 되어있고, 유지보수가 편한 서버를 제작하게 해준다.</li>\n</ul>\n<h1 id=\"nestjs-lifecycle\" style=\"position:relative;\"><a href=\"#nestjs-lifecycle\" aria-label=\"nestjs lifecycle permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Nestjs LifeCycle</h1>\n<p><img src=\"https://velog.velcdn.com/images/minsoku03/post/b67672cd-fdea-4067-ab80-02e15b3ffdb3/image.png\" alt=\"Nestjs LifeCycle\"></p>\n<h2 id=\"pipe\" style=\"position:relative;\"><a href=\"#pipe\" aria-label=\"pipe permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pipe</h2>\n<ul>\n<li>Pipe는 Injectable 데코레이터로 데코레이팅 되어있고, PipeTransform이라는 인터페이스를 implement한다.</li>\n<li>변형: 원하는 형태로 변형시켜준다 ex) string => integer</li>\n<li>검증: 만약에 유효한 데이터면 그대로 전달해주고 아닐 경우에는 에러를 던진다.</li>\n</ul>\n<h2 id=\"코드예시\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C%EC%98%88%EC%8B%9C\" aria-label=\"코드예시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드예시</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">test.pipe.ts\n\nimport {\n    ArgumentMetadata,\n    BadRequestException,\n    Injectable,\n    PipeTransform,\n} from '@nestjs/common';\n\n@Injectable()\nexport class TestPipe implements PipeTransform {\n    transform(value: any, metadata: ArgumentMetadata) {\n        if (value.content.toString().length > 10) {\n            throw new BadRequestException(\n                'content는 10자 미만으로 작성해주세요',\n            );\n        }\n        return value.toString();\n    }\n}</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">app.controller.ts\n\n@Controller()\nexport class AppController {\n    constructor(private readonly appService: AppService) {}\n\n    @Get()\n    @UsePipes(TestPipe)\n    getHello(@Body() body: Ibody): string {\n        console.log(body);\n        return '성공';\n    }\n}</code></pre></div>\n<h3 id=\"결과\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EA%B3%BC\" aria-label=\"결과 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결과</h3>\n<blockquote>\n<p>“message”: “content는 10자 미만으로 작성해주세요”,</p>\n</blockquote>\n<blockquote>\n<p>“error”: “Bad Request”,</p>\n</blockquote>\n<blockquote>\n<p>“statusCode”: 400</p>\n</blockquote>\n<h2 id=\"guard\" style=\"position:relative;\"><a href=\"#guard\" aria-label=\"guard permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Guard</h2>\n<ul>\n<li>Guard는 쉽게 말하면 보호하는 역할</li>\n<li>Guard는 api 요청이 들어갔을 때 (Controller, Service, Repository) 로직 처리 부분까지 갈 수 있냐 없냐를 결정하게 해주는 요소다.</li>\n<li>Pipe가 적용이 되기 훨씬 전에 Guard가 먼저 적용이 돼서 만약에 Guard에서 이번 요청은 들어갈 수가 없어라고 판단을 한다면 파이프까지의 요청이 이어지지도 않는다.</li>\n<li>Guard를 구현하는 것은 Pipe를 구현하는 것과 굉장히 비슷하다.</li>\n<li>Injectable 데코레이터로 데코레이팅하고, CanActivate라는 타입을 implement를 해준다.</li>\n</ul>\n<h2 id=\"코드예시-1\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C%EC%98%88%EC%8B%9C-1\" aria-label=\"코드예시 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드예시</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">test.guard.ts\n\nimport {\n    CanActivate,\n    ExecutionContext,\n    Injectable,\n    UnauthorizedException,\n} from '@nestjs/common';\n\n@Injectable()\nexport class TestGuard implements CanActivate {\n    canActivate(context: ExecutionContext): boolean {\n        const req = context.switchToHttp().getRequest();\n        const token = req.headers['authorization'];\n        if (!token) {\n            throw new UnauthorizedException('토큰이 없습니다 !!!!');\n        }\n        return true;\n    }\n}</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">app.controller.ts\n\n@Controller()\nexport class AppController {\n    constructor(private readonly appService: AppService) {}\n    @Get()\n    @UsePipes(TestPipe)\n    @UseGuards(TestGuard)\n    getHello(@Body() body: Ibody): string {\n        console.log(body);\n        return '성공';\n    }\n}</code></pre></div>\n<h2 id=\"결과-1\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EA%B3%BC-1\" aria-label=\"결과 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결과</h2>\n<ul>\n<li>Autorization을 안 넣었을 때</li>\n</ul>\n<p><img src=\"https://velog.velcdn.com/images/minsoku03/post/a5f9eeaa-ab9d-4efa-b469-31c4d57451dd/image.png\" alt=\"Guard Autorization\"></p>\n<ul>\n<li>Autorization을 넣었을 때</li>\n</ul>\n<p><img src=\"https://velog.velcdn.com/images/minsoku03/post/ae49af58-8478-480c-8742-968275504912/image.png\" alt=\"Guard Autorization\"></p>\n<h2 id=\"interceptor\" style=\"position:relative;\"><a href=\"#interceptor\" aria-label=\"interceptor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Interceptor</h2>\n<ul>\n<li>메서드를 실행하기 전과 후로 우리가 추가 로직을 작성을 할 수가 있다.</li>\n<li>함수에서 반환된 결과를 우리가 변형할 수 있다.</li>\n<li>함수에서 던진 에러를 우리가 변형할 수 있다.</li>\n<li>기본으로 작성해놓은 함수로직에 추가 기능을 넣을 수가 있다.</li>\n<li>어떤 함수의 기능을 완전히 override할 수가 있다.</li>\n<li>Nestjs 라이프사이클에서 볼 수 있는 모든 기능 중에서 유일하게 요청과 응답을 모두 핸들링할 수 있는 기능이다.</li>\n<li>또 보통 로그를 쌓는 기능은 Interceptor에서 수행된다.</li>\n</ul>\n<p><img src=\"https://velog.velcdn.com/images/minsoku03/post/7df6346c-4e2d-4268-a9da-fb00fb029998/image.png\" alt=\"Interceptor\"></p>\n<ul>\n<li>위를 보면 Client Side(App, Web or server)가 있다.</li>\n<li>요청이 들어가서 Route Handler(포스트, 게시글 등등) 여기로 요청이 들어가면 Interceptor가 한 번 Intercepting을 한다.</li>\n</ul>\n<p>이 요청을 변경하거나 그대로 둘 수 있다.</p>\n<ul>\n<li>그다음에 요청이 processing이 되고 Route Handler에서 함수가 실행이 되고 다시 응답으로 Client Side로 보내질 때, 그때 한 번 더 Interceptor가 적용이 된다.</li>\n<li>Request용 Interceptor, Response용 Interceptor를 따로 작성을 하는 게, 아니고 Interceptor 하나에서 이 두 가지를 모두 핸들링할 수 있는 것이 Interceptor의 특장이다.</li>\n<li>ExceptionFilter(예외상황처리라 예외) Interceptor가 유일하게 응답값까지 변경을 할 수 있는 기능이다.</li>\n<li>Interceptor는 Observable이라는 것을 반환하고 Rxjs를 사용한다. 그리고 Injectable 데코레이터로 데코레이팅하고 NestInterceptor를 implement 한다.</li>\n</ul>\n<h2 id=\"코드예시-2\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C%EC%98%88%EC%8B%9C-2\" aria-label=\"코드예시 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드예시</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">test.interceptor.ts\n\nimport {\n    CallHandler,\n    ExecutionContext,\n    Injectable,\n    NestInterceptor,\n} from '@nestjs/common';\nimport { Observable, tap } from 'rxjs';\n\n@Injectable()\nexport class TestInterceptor implements NestInterceptor {\n    intercept(\n        context: ExecutionContext,\n        next: CallHandler&lt;any>,\n    ): Observable&lt;any> {\n        const now = new Date();\n        console.log(`[REQ] ${now.toLocaleString('kr')}`);\n        return next\n            .handle()\n            .pipe(\n                tap((observable) =>\n                    console.log(\n                        `[RES] ${new Date().toLocaleString('kr')} ${\n                            new Date().getMilliseconds() - now.getMilliseconds()\n                        }`,\n                    ),\n                ),\n            );\n    }\n}</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">app.controller.ts\n\n@Controller()\nexport class AppController {\n    constructor(private readonly appService: AppService) {}\n    @Get()\n    @UsePipes(TestPipe)\n    @UseGuards(TestGuard)\n    @UseInterceptors(TestInterceptor)\n    getHello(@Body() body: Ibody): string {\n        return '성공';\n    }\n}</code></pre></div>\n<h3 id=\"결과-2\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EA%B3%BC-2\" aria-label=\"결과 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결과</h3>\n<blockquote>\n<p>[REQ] 12/14/2023, 5:33:51 PM</p>\n</blockquote>\n<blockquote>\n<p>[RES] 12/14/2023, 5:33:51 PM 4</p>\n</blockquote>\n<h2 id=\"exceptionfilter\" style=\"position:relative;\"><a href=\"#exceptionfilter\" aria-label=\"exceptionfilter permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ExceptionFilter</h2>\n<ul>\n<li>ExceptionFilter는 말 그대로 예외를 필터링하는 것이다.</li>\n<li>예외가 일어났을 때 그 특정 예외를 잡아 가지고 형태를 변경한다던지, 특정 응답을 보내는 등의 여러가지 작업을 할 수가 있다.</li>\n<li>ExceptionFilter는 에러처리에 대한 로깅 로직을 작성하기 좋은 위치에 있다.</li>\n<li>ExceptionFilter는 먼저 Controller, Service, Repository의 로직 처리 후 ExceptionFilter가 적용이 되고 Interceptor로 전달이 된다.</li>\n<li>ExceptionFilter에서 수행한 부분들은 Interceptor에서 마찬가지로 또 추가 처리를 할 수가 있다.</li>\n</ul>\n<p><a href=\"https://velog.velcdn.com/images/minsoku03/post/85b9ce03-a85d-4884-b0a7-0812ffc92cad/image.png\">!ExceptionFilter</a></p>\n<ul>\n<li>클라이언트 사이드에서 요청을 보내고, 요청을 처리하는 부분에서 응답이 돌아갈 때 Filter가 적용이 된다.</li>\n</ul>\n<h3 id=\"코드예시-3\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C%EC%98%88%EC%8B%9C-3\" aria-label=\"코드예시 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드예시</h3>\n<ul>\n<li>ExceptionFilter는 Catch로 데코레이팅이 되고 ExceptionFilter를 implement한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">test.exceptionFilter.ts\n\nimport {\n    ArgumentsHost,\n    Catch,\n    ExceptionFilter,\n    HttpException,\n} from '@nestjs/common';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n    catch(exception: HttpException, host: ArgumentsHost) {\n        const ctx = host.switchToHttp();\n        const response = ctx.getResponse();\n        const request = ctx.getRequest();\n        const status = exception.getStatus();\n\n        response.status(status).json({\n            statusCode: status,\n            message: exception.message,\n            timestamp: new Date().toLocaleDateString('kr'),\n            path: request.url,\n        });\n    }\n}</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">app.controller.ts\n\n@Controller()\nexport class AppController {\n    constructor(private readonly appService: AppService) {}\n    @Get()\n    @UsePipes(TestPipe)\n    @UseGuards(TestGuard)\n    @UseInterceptors(TestInterceptor)\n    @UseFilters(HttpExceptionFilter)\n    getHello(@Body() body: Ibody): string {\n        throw new BadRequestException('에러라고합니다 !');\n        return '성공';\n    }\n}</code></pre></div>\n<h3 id=\"결과-3\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EA%B3%BC-3\" aria-label=\"결과 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결과</h3>\n<blockquote>\n<p>“statusCode”: 400</p>\n</blockquote>\n<blockquote>\n<p>“message”: “에러라고합니다 !”</p>\n</blockquote>\n<blockquote>\n<p>“timestamp”: “12/14/2023”</p>\n</blockquote>\n<blockquote>\n<p>“path”: ”/”</p>\n</blockquote>\n<ul>\n<li>이렇게 하나의 endpoint에 적용할 수도 있고, 전체에 적용할 수 있습니다.</li>\n</ul>\n<h3 id=\"전체에-exceptionfilter를-적용하는-코드-예시\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%B2%B4%EC%97%90-exceptionfilter%EB%A5%BC-%EC%A0%81%EC%9A%A9%ED%95%98%EB%8A%94-%EC%BD%94%EB%93%9C-%EC%98%88%EC%8B%9C\" aria-label=\"전체에 exceptionfilter를 적용하는 코드 예시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전체에 ExceptionFilter를 적용하는 코드 예시</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">main.ts\n\nimport { NestFactory } from '@nestjs/core';\nimport { AppModule } from './app.module';\nimport { HttpExceptionFilter } from 'src/exception-filter/test.exceptionFilter';\n\nasync function bootstrap() {\n    const app = await NestFactory.create(AppModule);\n    await app.listen(3000);\n\n    app.useGlobalFilters(new HttpExceptionFilter());\n}\nbootstrap();</code></pre></div>\n<h2 id=\"middleware\" style=\"position:relative;\"><a href=\"#middleware\" aria-label=\"middleware permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Middleware</h2>\n<p>MiddleWare가 가장 먼저 요청을 받는 역할을 한다.</p>\n<ul>\n<li>어떤 코드든 실행할 수 있다.</li>\n<li>요청과 응답 객체의 변화를 우리가 만들어 줄 수 있다. (무언가를 추가하거나 삭제하거나 업데이트가 가능)</li>\n<li>요청이 끝나기전에 우리가 중간에 중지를 할 수 있다.</li>\n<li>MiddleWare를 원한다면 여러개를 계속 적용을 할 수가 있다.</li>\n<li>만약에 현재 MiddleWare가 요청 사이클을 중지시키지 않고 에러 같은 것을 던지지 않으면 다음 MiddleWare에다가 요청을 넘기기 위해서 next 함수를 불러야 된다. (안 그러면 그대로 멈춤)</li>\n</ul>\n<h3 id=\"코드예시-4\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C%EC%98%88%EC%8B%9C-4\" aria-label=\"코드예시 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드예시</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">test.middleware.ts\n\nimport { NestMiddleware } from '@nestjs/common';\nimport { NextFunction } from 'express';\n\nexport class TestMiddleWare implements NestMiddleware {\n    use(req: Request, res: Response, next: NextFunction) {\n        console.log(\n            `[REQ] ${req.url} ${req.method} ${new Date().toLocaleString('kr')}`,\n        );\n        next();\n    }\n}</code></pre></div>\n<ul>\n<li>다른 라이프사이클과 다른 점은 middleware는 modlue에 작성을 한다.</li>\n<li>NestModule를 implements를 하고 path, method로 원하는 값을 받을 수 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">app.module.ts\n\nimport {\n    MiddlewareConsumer,\n    Module,\n    NestModule,\n    RequestMethod,\n} from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TestMiddleWare } from 'src/middleware/test.middleware';\n\n@Module({\n    imports: [],\n    controllers: [AppController],\n    providers: [AppService],\n})\nexport class AppModule implements NestModule {\n    configure(consumer: MiddlewareConsumer) {\n        consumer.apply(TestMiddleWare).forRoutes({\n            path: '/',\n            method: RequestMethod.ALL,\n        });\n    }\n}</code></pre></div>\n<h3 id=\"결과-4\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EA%B3%BC-4\" aria-label=\"결과 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결과</h3>\n<blockquote>\n<p>[REQ] / GET 12/14/2023, 6:24:48 PM</p>\n</blockquote>","frontmatter":{"date":"March 22, 2021","title":"nestjs","categories":"nestjs ts","author":"minsoku","emoji":"🐶"},"fields":{"slug":"/nestjs_intro/"}},"prev":null},"pageContext":{"slug":"/portfolio_1/","nextSlug":"/nestjs_intro/","prevSlug":""}},"staticQueryHashes":["1956554647","2938748437"]}